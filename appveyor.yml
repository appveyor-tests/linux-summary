image:
- ubuntu1604-master
- ubuntu1804-master
- ubuntu2004-master

build: off

test_script:
- lsb_release -a
- pwsh --version
- docker version
- docker info
- git --version
- git lfs version
- hg --version
- svn --version
- dotnet --list-sdks
- dotnet --list-runtimes
- nvm --version
- nvm list
- gvm version
- gvm list
- mono --version
- if command -v clang-9 > /dev/null; then clang-9 --version; else echo "clang-9 is not installed"; fi
- if command -v clang-10 > /dev/null; then clang-10 --version; else echo "clang-10 is not installed"; fi
- if command -v gcc-9 > /dev/null; then gcc-9 --version; else echo "gcc-9 is not installed"; fi
- if command -v gcc-8 > /dev/null; then gcc-8 --version; else echo "gcc-8 is not installed"; fi
- if command -v gcc-7 > /dev/null; then gcc-7 --version; else echo "gcc-7 is not installed"; fi
- if command -v gcc-6 > /dev/null; then gcc-6 --version; else echo "gcc-6 is not installed"; fi
- if command -v gcc-5 > /dev/null; then gcc-5 --version; else echo "gcc-5 is not installed"; fi
- if command -v gcc-4 > /dev/null; then gcc-4 --version; else echo "gcc-4 is not installed"; fi
- rvm --version
- rvm list
- ls ~/venv*
- erl -eval '{ok, Version} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), io:fwrite(Version), halt().' -noshell
- yarn --version
- curl --version
- wget --version
- redis-server --version
- vcpkg version
- cmake --version
- packer --version
- aws --version
- az --version
- gcloud --version
#- localstack --version
- sh: |
    declare tools_array
    # utilities
    tools_array=( "zip" "unzip" "wget" "curl" "time" "tree" "telnet" "dnsutils" "net-tools" "file" "ftp" "lftp" )
    tools_array+=( "p7zip-rar" "p7zip-full" "debconf-utils" "stress" "rng-tools"  "dkms" "dos2unix" )

    # build tools
    tools_array+=( "make" "binutils" "bison" "gcc" "tcl" "pkg-config" "ninja-build" )
    tools_array+=( "ant" "ant-optional" "maven" "gradle" "nuget" "graphviz" )
    
    # servers
    tools_array+=( "rabbitmq-server" "mysql-server" "mongodb-server" "postgresql" "mssql-server" )
    
    # browsers
    tools_array+=( "firefox" "google-chrome-stable" )
    
    dpkg-query -W -f='${binary:Package}\t\t${Version}\n' "${tools_array[@]}"
